.glitch {
  color: white;
  font-size: 100px;
  position: relative;
  width: 700px;
  margin: 0 auto;
  left: 30px
}

@keyframes noise-anim {
  $steps: 20;

  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}

.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -1px 0 red;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim 2s infinite linear alternate-reverse;
}

@keyframes noise-anim-2 {
  $steps: 20;

  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}

.glitch:before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  text-shadow: 1px 0 blue;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim-2 3s infinite linear alternate-reverse;
}

//break between the title and buttons
$greenLight: rgb(0, 128, 128);
$greenDark: rgb(0, 23, 23);
$greenBorder: rgb(0, 128, 128);

*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

a {
  color: white;
  text-decoration: none;
}

body {
  background: black;
  // background-image: url('https://players.planetside2.com/images/global/splashBg.jpg?v=205.11');
  background-size: cover;
  color: white;
  font-family: Electrolize, sans-serif;
}

// a.box
.box {
  overflow: hidden;
  display: block;
  position: relative;
  width: 600px;
  height: 150px;
  margin: 50px auto;
  padding: 20px;
  font-weight: 600;
  text-align: center;
  font-size: 34px;
  text-shadow: 0px 0px 12px rgba(0, 0, 0, 1);
  z-index: 3;
}

// a.box:before - this psuedoclass is used for the border 
.box:before {
  z-index: 4;
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  width: 596px;
  height: 146px;
}

// a.box:after - this psuedoclass is used to create a rectangle, rotate it and place it in the at the corners
.box:after {
  content: "";
  position: absolute;
  top: -349px;
  left: 49px;
  width: 502px;
  height: 849px;
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  transform: rotate(-45deg);
  transform-origin: 50% 50%;
  z-index: -1;
}

// a.green - styles for the green version of the button
.green {
  // 'drop-shadow' for the button
  box-shadow: -12px -12px 4px -10px rgba($greenBorder, 0.2), 12px 12px 4px -10px rgba($greenBorder, 0.2);

  &:before {
    // border created with box-shadow
    box-shadow: -20px -20px 0 2px rgba($greenBorder, 1), 20px 20px 0 2px rgba($greenBorder, 1);
  }

  &:after {
    // background gradient and angled border
    background-image: linear-gradient(225deg, rgba($greenLight, 0.6) 30%, rgba($greenDark, 0.6) 50%);
    border-left: 2px solid rgba($greenBorder, 1);
    border-right: 2px solid rgba($greenBorder, 1);
    box-shadow: 0px 0px 4px 4px rgba($greenBorder, 0.2), inset 0px 0px 50px 4px rgba($greenBorder, 0.5);
  }

  // hover styles for .green
  &:hover {
    // modifys the textshadow and the 'drop-shadow'
    text-shadow: 0px 0px 8px rgba($greenLight, 1);
    box-shadow: -12px -12px 25px -10px rgba($greenBorder, 0.6), 12px 12px 25px -10px rgba($greenBorder, 0.6);

    &:after {
      // making background gradient more opaque
      background-image: linear-gradient(225deg, rgba($greenLight, 0.8) 40%, rgba($greenDark, 0.8) 50%);
    }
  }
}